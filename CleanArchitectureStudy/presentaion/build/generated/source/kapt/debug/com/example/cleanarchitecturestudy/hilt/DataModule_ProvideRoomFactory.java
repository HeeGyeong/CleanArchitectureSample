// Generated by Dagger (https://dagger.dev).
package com.example.cleanarchitecturestudy.hilt;

import android.content.Context;
import com.example.data.db.movie.MovieDatabase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DataModule_ProvideRoomFactory implements Factory<MovieDatabase> {
  private final Provider<Context> contextProvider;

  public DataModule_ProvideRoomFactory(Provider<Context> contextProvider) {
    this.contextProvider = contextProvider;
  }

  @Override
  public MovieDatabase get() {
    return provideRoom(contextProvider.get());
  }

  public static DataModule_ProvideRoomFactory create(Provider<Context> contextProvider) {
    return new DataModule_ProvideRoomFactory(contextProvider);
  }

  public static MovieDatabase provideRoom(Context context) {
    return Preconditions.checkNotNullFromProvides(DataModule.INSTANCE.provideRoom(context));
  }
}
