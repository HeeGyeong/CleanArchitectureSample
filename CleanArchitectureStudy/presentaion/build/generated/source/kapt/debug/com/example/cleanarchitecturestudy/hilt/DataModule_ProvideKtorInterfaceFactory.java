// Generated by Dagger (https://dagger.dev).
package com.example.cleanarchitecturestudy.hilt;

import com.example.data.api.KtorInterface;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import io.ktor.client.HttpClient;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DataModule_ProvideKtorInterfaceFactory implements Factory<KtorInterface> {
  private final Provider<HttpClient> clientProvider;

  public DataModule_ProvideKtorInterfaceFactory(Provider<HttpClient> clientProvider) {
    this.clientProvider = clientProvider;
  }

  @Override
  public KtorInterface get() {
    return provideKtorInterface(clientProvider.get());
  }

  public static DataModule_ProvideKtorInterfaceFactory create(Provider<HttpClient> clientProvider) {
    return new DataModule_ProvideKtorInterfaceFactory(clientProvider);
  }

  public static KtorInterface provideKtorInterface(HttpClient client) {
    return Preconditions.checkNotNullFromProvides(DataModule.INSTANCE.provideKtorInterface(client));
  }
}
