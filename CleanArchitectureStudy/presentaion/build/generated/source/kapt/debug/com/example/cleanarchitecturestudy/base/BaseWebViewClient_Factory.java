// Generated by Dagger (https://dagger.dev).
package com.example.cleanarchitecturestudy.base;

import com.example.cleanarchitecturestudy.view.web.WebViewModel;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class BaseWebViewClient_Factory implements Factory<BaseWebViewClient> {
  private final Provider<WebViewModel> vmProvider;

  public BaseWebViewClient_Factory(Provider<WebViewModel> vmProvider) {
    this.vmProvider = vmProvider;
  }

  @Override
  public BaseWebViewClient get() {
    return newInstance(vmProvider.get());
  }

  public static BaseWebViewClient_Factory create(Provider<WebViewModel> vmProvider) {
    return new BaseWebViewClient_Factory(vmProvider);
  }

  public static BaseWebViewClient newInstance(WebViewModel vm) {
    return new BaseWebViewClient(vm);
  }
}
