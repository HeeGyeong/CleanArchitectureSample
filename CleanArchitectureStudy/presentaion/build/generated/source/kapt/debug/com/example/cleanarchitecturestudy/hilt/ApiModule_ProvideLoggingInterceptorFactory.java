// Generated by Dagger (https://dagger.dev).
package com.example.cleanarchitecturestudy.hilt;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import okhttp3.logging.HttpLoggingInterceptor;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ApiModule_ProvideLoggingInterceptorFactory implements Factory<HttpLoggingInterceptor> {
  @Override
  public HttpLoggingInterceptor get() {
    return provideLoggingInterceptor();
  }

  public static ApiModule_ProvideLoggingInterceptorFactory create() {
    return InstanceHolder.INSTANCE;
  }

  public static HttpLoggingInterceptor provideLoggingInterceptor() {
    return Preconditions.checkNotNullFromProvides(ApiModule.INSTANCE.provideLoggingInterceptor());
  }

  private static final class InstanceHolder {
    private static final ApiModule_ProvideLoggingInterceptorFactory INSTANCE = new ApiModule_ProvideLoggingInterceptorFactory();
  }
}
