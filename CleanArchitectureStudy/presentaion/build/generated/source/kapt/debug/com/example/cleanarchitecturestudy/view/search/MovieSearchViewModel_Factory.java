// Generated by Dagger (https://dagger.dev).
package com.example.cleanarchitecturestudy.view.search;

import com.example.domain.usecase.movie.GetPagingMoviesUseCase;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MovieSearchViewModel_Factory implements Factory<MovieSearchViewModel> {
  private final Provider<GetPagingMoviesUseCase> getPagingMoviesUseCaseProvider;

  public MovieSearchViewModel_Factory(
      Provider<GetPagingMoviesUseCase> getPagingMoviesUseCaseProvider) {
    this.getPagingMoviesUseCaseProvider = getPagingMoviesUseCaseProvider;
  }

  @Override
  public MovieSearchViewModel get() {
    return newInstance(getPagingMoviesUseCaseProvider.get());
  }

  public static MovieSearchViewModel_Factory create(
      Provider<GetPagingMoviesUseCase> getPagingMoviesUseCaseProvider) {
    return new MovieSearchViewModel_Factory(getPagingMoviesUseCaseProvider);
  }

  public static MovieSearchViewModel newInstance(GetPagingMoviesUseCase getPagingMoviesUseCase) {
    return new MovieSearchViewModel(getPagingMoviesUseCase);
  }
}
