// Generated by Dagger (https://dagger.dev).
package com.example.cleanarchitecturestudy.hilt;

import com.example.data.db.movie.MovieDao;
import com.example.data.repository.search.local.MovieLocalDataSource;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DataModule_ProvideLocalDataSourceFactory implements Factory<MovieLocalDataSource> {
  private final Provider<MovieDao> movieDaoProvider;

  public DataModule_ProvideLocalDataSourceFactory(Provider<MovieDao> movieDaoProvider) {
    this.movieDaoProvider = movieDaoProvider;
  }

  @Override
  public MovieLocalDataSource get() {
    return provideLocalDataSource(movieDaoProvider.get());
  }

  public static DataModule_ProvideLocalDataSourceFactory create(
      Provider<MovieDao> movieDaoProvider) {
    return new DataModule_ProvideLocalDataSourceFactory(movieDaoProvider);
  }

  public static MovieLocalDataSource provideLocalDataSource(MovieDao movieDao) {
    return Preconditions.checkNotNullFromProvides(DataModule.INSTANCE.provideLocalDataSource(movieDao));
  }
}
